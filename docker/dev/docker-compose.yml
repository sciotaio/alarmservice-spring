volumes:
  grafana_vol_fs_data: {}
  influxdb_vol_db_influxdb:
    external: true

# networks:
  # dev-sciota-net:

services:
  
  postgres:
    image: postgres:16.2
    container_name: ${COMPOSE_PROJECT_NAME}_postgres
    environment:
      - POSTGRES_DB=demo_postgres
      - POSTGRES_USER=demo
      - POSTGRES_PASSWORD=demo
    ports:
      - "20001:5432"
    # networks:
    #   - dev-sciota-net
  
  phppgadmin:
    build:
      context: ../container/phppgadmin
      dockerfile: Dockerfile
    image: ${COMPOSE_PROJECT_NAME}_phppgadmin
    container_name: ${COMPOSE_PROJECT_NAME}_phppgadmin
    ports:
      - "30008:8080"
    links:
      - postgres:postgres
    environment:
      DATABASE_HOST: postgres
    # networks:
    #   - dev-sciota-net
  
#   influxdbv1:
#     build:
#       context: ../container/influxdbv1
#       dockerfile: Dockerfile
#     image: sciota_influxdbv1_${COMPOSE_PROJECT_NAME}
#     container_name: ${COMPOSE_PROJECT_NAME}_influxdbv1
#     labels:
#       - io.sciota.environment=${COMPOSE_PROJECT_NAME}
#     environment:
#       - INFLUXDB_DB=telegraf
#     env_file:
#       - ./${COMPOSE_PROJECT_NAME}_influxdbv1.env
#         # INFLUXDB_ADMIN_USER
#         # INFLUXDB_ADMIN_PASSWORD
#         # INFLUXDB_USER
#         # INFLUXDB_USER_PASSWORD
#         # INFLUXDB_READ_USER
#         # INFLUXDB_READ_USER_PASSWORD
#     volumes:
#       - influxdb_vol_db_influxdb:/var/lib/influxdb
#     # networks:
#     #   - dev-sciota-net
#     ports:
#       - "20002:8086"
#     restart: always
#     logging:
#       options:
#         max-size: "10m"
#         max-file: "3"

#   telegraf:
#     image: telegraf:1.31.3-alpine
#     container_name: ${COMPOSE_PROJECT_NAME}_telegraf
#     labels:
#       - io.sciota.environment=${COMPOSE_PROJECT_NAME}
#     environment:
#       - INFLUXDB_DB=telegraf
#       - INFLUXDB_URL=http://influxdbv1:8086
#       - HOST_MOUNT_PREFIX=/hostfs
#       - HOST_PROC=/hostfs/proc
#       - HOST_SYS=/hostfs/sys
#     env_file:
#       - ./${COMPOSE_PROJECT_NAME}_telegraf.env
#         # INFLUXDB_USER (for influxdbv1)
#         # INFLUXDB_USER_PASSWORD (for influxdbv1)
#         # INFLUX_TOKEN (for influxdbv2)
#         # METRICS_SCRAPE_ENDPOINT (where to get our "main" service's metrics from)
#     user: telegraf:999 # 114 is GID of docker group
#     volumes:
#       - ./config/telegraf/telegraf.conf:/etc/telegraf/telegraf.conf:ro
#       - /var/run/docker.sock:/var/run/docker.sock:ro
#       - /:/hostfs:ro
#     depends_on:
#       - influxdbv1
#     # networks:
#     #   - dev-sciota-net
#     restart: always
#     logging:
#       options:
#         max-size: "10m"
#         max-file: "3"
  
#   grafana:
#     build:
#       context: ../container/grafana
#       dockerfile: Dockerfile
#     image: sciota_grafana_${COMPOSE_PROJECT_NAME}
#     container_name: ${COMPOSE_PROJECT_NAME}_grafana
#     labels:
#       - io.sciota.environment=${COMPOSE_PROJECT_NAME}
#     environment:
#       - TNT_INFLUXDB_DB=telegraf
#       - TNT_INFLUXDB_URL=http://influxdbv1:8086
#     env_file:
#       - ./${COMPOSE_PROJECT_NAME}_grafana.env
#         # PROD_INFLUXDB_READ_USER
#         # PROD_INFLUXDB_READ_USER_PASSWORD
#         # TEST_INFLUXDB_READ_USER
#         # TEST_INFLUXDB_READ_USER_PASSWORD
#         # GF_SECURITY_ADMIN_PASSWORD
#     volumes:
#       - grafana_vol_fs_data:/var/lib/grafana
# #     networks:
# #       - dev-sciota-net
#     ports:
#       - "30009:3000"
#     restart: always
